name: CI

on:
  push:
  pull_request:
  schedule:
    # Weekly Tuesday 6 AM build
    # * is a special character in YAML so you have to quote this string
    - cron: '0 6 * * 2'

jobs:
  cancel_ci:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    outputs:
      run_next: ${{ steps.skip_ci_step.outputs.run_next }}
    steps:
    # Base branch check should run whether we skip CI or not
    - name: Check base branch
      uses: pllim/action-check_pr_basebranch@main
      with:
        BASEBRANCH_NAME: master
    - name: Check skip CI
      uses: pllim/action-skip-ci@main
      id: skip_ci_step
      with:
        NO_FAIL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # This should only run if we did not skip CI
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@ce17749
      if: steps.skip_ci_step.outputs.run_next == 'true'
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

  # The rest only run if above are done

  pep_and_audit:
    runs-on: ubuntu-latest
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Lint with flake8
      run: |
        python -m pip install --upgrade pip flake8
        flake8 acstools --count
    # Make sure that packaging will work
    - name: pep517 build
      run: |
        python -m pip install --upgrade setuptools build "twine>=3.3"
        python -m build --sdist .
        twine check --strict dist/*
    - name: Security audit
      run: |
        python -m pip install --upgrade bandit
        bandit -r . -c .bandit.yaml

  link_check:
    runs-on: ubuntu-latest
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install and build
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -e .[docs]
    - name: Docs link check
      run: |
        cd doc
        make linkcheck
      shell: bash
